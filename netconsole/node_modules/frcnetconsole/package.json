{
  "author": {
    "name": "Evin Ugur"
  },
  "version": "1.0.4",
  "name": "frcnetconsole",
  "description": "node implementation of the ni-cRio NetConsole application for use in FIRST Robotics Competition",
  "keywords": [
    "FRC",
    "FIRST Robotics",
    "NetConsole",
    "ni-cRio"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/FRCTeam1073-TheForceTeam/netconsole.js.git"
  },
  "main": "./netconsole.js",
  "engines": {
    "node": ">= v0.4.0"
  },
  "dependencies": {},
  "devDependencies": {},
  "readme": "#netconsole.js\r\nThis is a port of NetConsole for the ni-cRio used in FIRST Robotics Competitions to node.js. \r\n\r\n##Usage\r\n\r\nTo obtain the latest stable build:\r\n```\r\n\tnpm install frcnetconsole\r\n\t#npm hosting is here: https://npmjs.org/package/frcnetconsole\r\n```\r\n\r\nTo run a local version\r\n```\r\n\tnode netconsole.js\r\n```\r\n\r\n##What's cool about this\r\n\r\n-\tMakes FIRST more accessible\r\n-\tCross platform. Can run on Windows, Linux, Mac, and Android (and unofficially iOS)\r\n-\tArguably faster at dumping your `printf`s than the stock version :P node.js runs on an event-based architecture, so rather than maintaining a UDP queue, data from the cRio can just be printed to stdout whenever the bound datagram socket sees new data by means of a JavaScript callback function.\r\n\r\n##Sending VxWorks Commands Through NetConsole\r\n\r\n- Set `TEAM` to your team number (this is used to generate your robot's IP address) \r\n\r\n```\r\n\tvar TEAM = 1073;\t//set to your team number\r\n```\r\n\r\n##List of VxWorks Commands\r\n\r\nHere is a list of all the commands you can run on the VxWorks operating system, and subsequently, through this program.\r\nhttp://touro.ligo-la.caltech.edu/~cparames/CDS/vxWorks_commands.html\r\n\r\n##Future Work\r\n\r\nThis is some stuff I'd like to do in the future. If you think this is missing something than please fork and add your own features if you see fit, or you can submit something that you'd like to be added by means of email or whatever.\r\n\r\n###Running VxWorks Scritps\r\nVxWorks has support for scripting, however most FRC development tends to stay away from WindShell. To make life easier, I'll be soon supporting the ability to run scripts off of the host by means of sending down data line by line as if they were being typed into the shell. While this obviously isn't the most mission safe way of automating tasks, it'll useful and (to me) a lot easier for some of the smaller things that might need to be done on the cRio.\r\n",
  "readmeFilename": "README.md",
  "_id": "frcnetconsole@1.0.4",
  "dist": {
    "shasum": "44c49f3e50bdca11cb9f50198703dbbd285000c4",
    "tarball": "http://registry.npmjs.org/frcnetconsole/-/frcnetconsole-1.0.4.tgz"
  },
  "_from": "frcnetconsole@",
  "_npmVersion": "1.2.17",
  "_npmUser": {
    "name": "evinugur",
    "email": "evinoog96@gmail.com"
  },
  "maintainers": [
    {
      "name": "evinugur",
      "email": "evinoog96@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "44c49f3e50bdca11cb9f50198703dbbd285000c4",
  "_resolved": "https://registry.npmjs.org/frcnetconsole/-/frcnetconsole-1.0.4.tgz"
}
